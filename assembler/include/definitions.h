#ifndef DEFINITIONS_H
#define DEFINITIONS_H

#define DEFINE_INSTRUCTION(name, args) {name, args}

#include <global.h>

enum {
	T_EOF,
	
	T_INT,
	T_ADD,
	T_COMMA,

	T_STRING,
	T_INSTRUCTION,

};

struct instruction {
	char* name;
	int argc;
};

struct token {
	int type;
	int value;
	uint8_t* extra_bytes;

	struct token* next;
};

static const struct instruction ISA[] = {
	DEFINE_INSTRUCTION("NOP", 	0),
	DEFINE_INSTRUCTION("MOV", 	2),
	DEFINE_INSTRUCTION("ADD", 	2),
	DEFINE_INSTRUCTION("SUB", 	2),
	DEFINE_INSTRUCTION("MUL", 	2),
	DEFINE_INSTRUCTION("DIV", 	2),
	DEFINE_INSTRUCTION("OR", 	2),
	DEFINE_INSTRUCTION("XOR", 	2),
	DEFINE_INSTRUCTION("AND", 	2),
	DEFINE_INSTRUCTION("NOT", 	1),
	DEFINE_INSTRUCTION("INT", 	1),
	DEFINE_INSTRUCTION("SIVTE", 2),
	DEFINE_INSTRUCTION("RIVTE", 1),
	DEFINE_INSTRUCTION("IRET", 	0),
	DEFINE_INSTRUCTION("CMP", 	2),
	DEFINE_INSTRUCTION("JMP", 	1),
	DEFINE_INSTRUCTION("CALL", 	1),
	DEFINE_INSTRUCTION("RET", 	0),
	DEFINE_INSTRUCTION("JE", 	1),
	DEFINE_INSTRUCTION("JNE", 	1),
	DEFINE_INSTRUCTION("JG", 	1),
	DEFINE_INSTRUCTION("JGE", 	1),
	DEFINE_INSTRUCTION("JL", 	1),
	DEFINE_INSTRUCTION("JLE", 	1),
	DEFINE_INSTRUCTION("JC", 	1),
	DEFINE_INSTRUCTION("JNC", 	1),
	DEFINE_INSTRUCTION("JZ", 	1),
	DEFINE_INSTRUCTION("JNZ", 	1),
	DEFINE_INSTRUCTION("PUSH", 	1),
	DEFINE_INSTRUCTION("POP", 	1),
	DEFINE_INSTRUCTION("DB", 	3),
	DEFINE_INSTRUCTION("DS", 	3)
};

#endif